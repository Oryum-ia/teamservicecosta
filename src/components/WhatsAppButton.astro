---
// WhatsApp Floating Button with Location Selector
interface Props {
  phone?: string;
  message?: string;
}

const {
  phone = '+573205085531',
  message = 'Hola, necesito informaciÃ³n sobre los servicios de Team Service Costa'
} = Astro.props;

const sedes = [
  { nombre: 'MonterÃ­a', telefono: '+573205085531' },
  { nombre: 'Cartagena', telefono: '+573023262268' },
  { nombre: 'ApartadÃ³', telefono: '+573023262239' }
];
---

<div class="whatsapp-container">
  <!-- Main WhatsApp Button -->
  <button class="whatsapp-float" id="whatsapp-btn" aria-label="Contactar por WhatsApp">
    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="currentColor">
      <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
    </svg>
    <div class="whatsapp-pulse"></div>
  </button>

  <!-- Location Selector Popup -->
  <div class="location-selector" id="location-selector">
    <div class="selector-header">
      <span class="selector-title">Â¿A quÃ© sede quieres escribir?</span>
      <button class="selector-close" id="selector-close" aria-label="Cerrar">Ã—</button>
    </div>
    <div class="selector-options">
      {sedes.map(sede => (
        <a
          href={`https://wa.me/${sede.telefono.replace(/\D/g, '')}?text=${encodeURIComponent(message)}`}
          target="_blank"
          rel="noopener noreferrer"
          class="location-option"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
            <circle cx="12" cy="10" r="3"></circle>
          </svg>
          <span>{sede.nombre}</span>
        </a>
      ))}
    </div>
  </div>
</div>

<style>
  .whatsapp-container {
    position: fixed;
    bottom: var(--spacing-6);
    right: var(--spacing-6);
    z-index: 99999;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .whatsapp-container.hidden {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  }

  .whatsapp-float {
    position: relative;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #25D366;
    color: var(--color-white);
    border-radius: 50%;
    box-shadow: 0 4px 12px rgba(37, 211, 102, 0.4);
    border: none;
    cursor: pointer;
    transition: all var(--transition-base);
  }

  .whatsapp-float:hover {
    background: #128C7E;
    box-shadow: 0 6px 20px rgba(37, 211, 102, 0.5);
    transform: scale(1.1);
  }

  .whatsapp-float svg {
    position: relative;
    z-index: 2;
  }

  .whatsapp-pulse {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: rgba(37, 211, 102, 0.4);
    animation: pulse-ring 2s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;
    z-index: 1;
  }

  @keyframes pulse-ring {
    0% {
      transform: translate(-50%, -50%) scale(0.8);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(2);
      opacity: 0;
    }
  }

  /* Location Selector */
  .location-selector {
    position: absolute;
    bottom: 75px;
    right: 0;
    background: white;
    border-radius: var(--radius-xl);
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
    min-width: 250px;
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .location-selector.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .selector-header {
    padding: var(--spacing-4);
    border-bottom: 1px solid var(--color-gray-200);
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .selector-title {
    font-size: var(--text-sm);
    font-weight: var(--font-semibold);
    color: #1a1a2e;
  }

  .selector-close {
    background: none;
    border: none;
    font-size: var(--text-2xl);
    color: var(--color-gray-500);
    cursor: pointer;
    padding: 0;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
    transition: all 0.2s ease;
  }

  .selector-close:hover {
    background: var(--color-gray-100);
    color: var(--color-gray-700);
  }

  .selector-options {
    padding: var(--spacing-2);
  }

  .location-option {
    display: flex;
    align-items: center;
    gap: var(--spacing-3);
    padding: var(--spacing-3) var(--spacing-4);
    border-radius: var(--radius-lg);
    color: var(--color-gray-700);
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .location-option:hover {
    background: #25D366;
    color: white;
  }

  .location-option svg {
    color: #FFD700;
    flex-shrink: 0;
  }

  .location-option:hover svg {
    color: white;
  }

  .location-option span {
    font-size: var(--text-base);
    font-weight: var(--font-medium);
  }

  /* Responsive Design */
  @media (max-width: 640px) {
    .whatsapp-container {
      bottom: var(--spacing-5);
      right: var(--spacing-5);
    }

    .whatsapp-float {
      width: 56px;
      height: 56px;
    }

    .whatsapp-float svg {
      width: 26px;
      height: 26px;
    }

    .whatsapp-pulse {
      width: 56px;
      height: 56px;
    }

    .location-selector {
      right: 0;
      min-width: 220px;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .whatsapp-float {
      transition: none;
    }

    .whatsapp-pulse {
      animation: none;
    }

    .location-selector {
      transition: none;
    }
  }
</style>

<script>
  const whatsappBtn = document.getElementById('whatsapp-btn');
  const locationSelector = document.getElementById('location-selector');
  const selectorClose = document.getElementById('selector-close');
  const whatsappContainer = document.querySelector('.whatsapp-container') as HTMLElement;

  if (whatsappBtn && locationSelector && selectorClose) {
    // Toggle selector on button click
    whatsappBtn.addEventListener('click', () => {
      locationSelector.classList.toggle('active');
    });

    // Close selector
    selectorClose.addEventListener('click', (e) => {
      e.stopPropagation();
      locationSelector.classList.remove('active');
    });

    // Close when clicking outside
    document.addEventListener('click', (e) => {
      const target = e.target as HTMLElement;
      if (!whatsappBtn.contains(target) && !locationSelector.contains(target)) {
        locationSelector.classList.remove('active');
      }
    });
  }

  // Hide WhatsApp button when cart is open
  if (whatsappContainer) {
    // Listen for cart state changes
    const checkCartState = () => {
      const cartModal = document.getElementById('cart-modal');
      if (cartModal && cartModal.classList.contains('open')) {
        whatsappContainer.classList.add('hidden');
        console.log('ðŸ›’ WhatsApp: Cart opened - hiding button');
      } else {
        whatsappContainer.classList.remove('hidden');
        console.log('ðŸ›’ WhatsApp: Cart closed - showing button');
      }
    };

    // Use MutationObserver to watch for cart modal changes
    const observer = new MutationObserver(() => {
      checkCartState();
    });

    // Start observing when DOM is ready
    const setupObserver = () => {
      const cartModal = document.getElementById('cart-modal');
      if (cartModal) {
        console.log('ðŸ›’ WhatsApp: Setting up cart observer');
        observer.observe(cartModal, {
          attributes: true,
          attributeFilter: ['class']
        });
        checkCartState(); // Initial check
      } else {
        // Retry if cart modal not found yet
        setTimeout(setupObserver, 100);
      }
    };

    setupObserver();
  }
</script>
